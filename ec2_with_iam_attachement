##################### aws iam assume role ###################
resource "aws_iam_role" "ec2_s3_access_role12" {
  name = "s3-role12"

  assume_role_policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
    {
      "Effect": "Allow",
      "Principal": {
        "Service": "ec2.amazonaws.com"
      },
      "Action": "sts:AssumeRole"
    }
  ]
})
}
###################### aws iam policy #########################
resource "aws_iam_policy" "policy12" {
  name        = "test_policy12"
  path        = "/"
  description = "My test policy12"

  # Terraform's "jsonencode" function converts a
  # Terraform expression result to valid JSON syntax.
  policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Action = [
          "s3:*",
        ]
        Effect   = "Allow"
        Resource = "*"
      },
    ]
  })
}
#################### iam role policy attachement ##############################
resource "aws_iam_role_policy_attachment" "test-attach12" {
  role       = aws_iam_role.ec2_s3_access_role12.name
  policy_arn = aws_iam_policy.policy12.arn
}
############################# aws iam instance profile ##########################
resource "aws_iam_instance_profile" "test_profile12" {
  name = "test_profile12"
  role = aws_iam_role.ec2_s3_access_role12.name
}
######################### attach IAM with EC2 ########################
resource "aws_instance" "role-test" {
  ami = "ami-0c1a7f89451184c8b"
  instance_type = "t2.micro"
  iam_instance_profile = aws_iam_instance_profile.test_profile12.name
  key_name = "keypair"
}
